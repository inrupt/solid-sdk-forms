{"code":"import * as tslib_1 from \"tslib\";\r\nimport shexParser from '@shexjs/parser';\r\nimport shexCore from '@shexjs/core';\r\nimport N3 from 'n3';\r\nimport { ShExRSchema } from '../schemas';\r\nimport { solidFetch } from '../utils';\r\nimport { ShexToUiForm } from '../classes/shex-ui';\r\nvar FormModel = /** @class */ (function () {\r\n    function FormModel(url) {\r\n        var _this = this;\r\n        /**\r\n         * @param {String} url the schema document url\r\n         * @return {String} document extension\r\n        */\r\n        this.schemaType = function (url) {\r\n            var name = url.split('.');\r\n            return name[name.length - 1];\r\n        };\r\n        /**\r\n         *\r\n         * @param {String} schemaText the document content\r\n         * @param {String} document url\r\n         */\r\n        this.parseShexC = function (schemaText, url) {\r\n            try {\r\n                var parser = shexParser.construct(url, null, { index: true });\r\n                return parser.parse(schemaText);\r\n            }\r\n            catch (error) {\r\n                throw Error(error);\r\n            }\r\n        };\r\n        this.parseTurtle = function (schemaText, url) {\r\n            try {\r\n                var graph = new N3.Store();\r\n                var parser = new N3.Parser({\r\n                    format: 'application/turtle',\r\n                    baseIRI: url\r\n                });\r\n                graph.addQuads(parser.parse(schemaText));\r\n                var shexRSchemaObj = shexParser\r\n                    .construct(url, null, { index: true })\r\n                    .parse(ShExRSchema);\r\n                var graphParser = shexCore.Validator.construct(shexRSchemaObj, {});\r\n                var schemaRoot = graph.getQuads(null, shexCore.Util.RDF.type, 'http://www.w3.org/ns/shex#Schema', '')[0].subject; // !!check\r\n                var val = graphParser.validate(shexCore.Util.makeN3DB(graph), schemaRoot, shexCore.Validator.start); // start shape\r\n                return shexCore.Util.ShExRtoShExJ(shexCore.Util.valuesToSchema(shexCore.Util.valToValues(val)));\r\n            }\r\n            catch (error) {\r\n                throw Error(error);\r\n            }\r\n        };\r\n        this.parseSchema = function (url) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var schemaText, format, schema, error_1;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, solidFetch.fetchSchema(url)];\r\n                    case 1:\r\n                        schemaText = _a.sent();\r\n                        format = this.schemaType(url);\r\n                        schema = void 0;\r\n                        switch (format.toLowerCase()) {\r\n                            case 'shex':\r\n                                schema = this.parseShexC(schemaText, url);\r\n                                break;\r\n                            case 'ttl':\r\n                                schema = this.parseTurtle(schemaText, url);\r\n                                break;\r\n                            case 'json':\r\n                                schema = this.parseShexJ(schemaText, url);\r\n                                break;\r\n                            default:\r\n                                throw new Error('File not supported.');\r\n                        }\r\n                        return [2 /*return*/, schema];\r\n                    case 2:\r\n                        error_1 = _a.sent();\r\n                        throw Error(error_1);\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        this.parseShexJ = function (schemaText, url) {\r\n            try {\r\n                return _this.relativeize(JSON.parse(schemaText), url);\r\n            }\r\n            catch (error) {\r\n                throw Error(error);\r\n            }\r\n        };\r\n        this.parseSchemaToUi = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var schema, formModel, error_2;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.parseSchema(this.url)];\r\n                    case 1:\r\n                        schema = _a.sent();\r\n                        formModel = new ShexToUiForm(schema);\r\n                        return [2 /*return*/, formModel.convert()];\r\n                    case 2:\r\n                        error_2 = _a.sent();\r\n                        throw Error(error_2);\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        this.relativeize = function (object, base) {\r\n            for (var key in object) {\r\n                var item = object[key];\r\n                if (key === 'id' ||\r\n                    (key === 'valueExpr' && typeof object[key] === 'string')) {\r\n                    object[key] = new URL(object[key], base).href;\r\n                }\r\n                else if (typeof item === 'object') {\r\n                    _this.relativeize(item, base);\r\n                }\r\n            }\r\n            return object;\r\n        };\r\n        this.url = url;\r\n    }\r\n    return FormModel;\r\n}());\r\nexport { FormModel };\r\n//# sourceMappingURL=form-model.js.map","references":["/Users/jairocampos/Public/janeiro/solid-sdk-forms/node_modules/@types/solid-auth-client/index.d.ts","/Users/jairocampos/Public/janeiro/solid-sdk-forms/node_modules/@shexjs/parser/shex-parser.js","/Users/jairocampos/Public/janeiro/solid-sdk-forms/node_modules/@shexjs/core/shex-core.js","/Users/jairocampos/Public/janeiro/solid-sdk-forms/node_modules/@types/n3/index.d.ts","/Users/jairocampos/Public/janeiro/solid-sdk-forms/src/schemas/index.ts","/Users/jairocampos/Public/janeiro/solid-sdk-forms/src/utils/index.ts","/Users/jairocampos/Public/janeiro/solid-sdk-forms/src/classes/shex-ui.ts"],"map":"{\"version\":3,\"file\":\"form-model.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/classes/form-model.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jairocampos/Public/janeiro/solid-sdk-forms/dist/types/classes/form-model.d.ts","writeByteOrderMark":false,"text":"export declare class FormModel {\r\n    url: string;\r\n    constructor(url: string);\r\n    /**\r\n     * @param {String} url the schema document url\r\n     * @return {String} document extension\r\n    */\r\n    schemaType: (url: String) => string;\r\n    /**\r\n     *\r\n     * @param {String} schemaText the document content\r\n     * @param {String} document url\r\n     */\r\n    parseShexC: (schemaText: String, url: String) => any;\r\n    parseTurtle: (schemaText: string, url: string) => any;\r\n    parseSchema: (url: string) => Promise<any>;\r\n    parseShexJ: (schemaText: string, url: string) => any;\r\n    parseSchemaToUi: () => Promise<any>;\r\n    relativeize: (object: any, base: any) => any;\r\n}\r\n"}}
